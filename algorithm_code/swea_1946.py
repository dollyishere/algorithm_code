# 테스트 케이스 값 T를 먼저 입력받음
T = int(input())

# 각 줄이 #t(테스트 케이스의 번호 즉, 1부터) 시작되어야 하기에 범위를 1부터 T + 1로 지정
for b in range(1, T + 1):
    # 알파벳 쌍의 개수 n를 입력받은 후, 빈 문자열 a를 만들어줌
    n = int(input())
    a = ""
    
    # n은 알파벳과 숫자 쌍의 개수이므로, 해당 범위만큼 알파벳과 출력 수를 입력받음
    for c in range(n):
        # 지정된 알파벳과 출력 수는 공백으로 구분되므로, split()로 나눠줌
        case = list(input().split())
        # input()으로 입력된 값은 모두 문자열이므로, 출력 수를 int화 한 후, 해당 수만큼 출력된(곱하기(*) 이용) 알파벳을 a에 더해줌
        a += case[0] * int(case[1])
    
    # 원본 문서의 너비는 10으로 고정되어야 하므로, a를 슬라이싱 해줄 필요가 있음
    for i in range(len(a)):
        # 처음 출력해야 하는 것은 #t(테스트 케이스 번호), 뒤의 원본 문서 값과 붙어서 출력되어야 하므로 i가 0일 때 출력하도록 해줌(반복문 안에 포함)
        if i == 0:
            print(f'#{b}')
        # 만약 남은 값이 10보다 작을 때는, 그 상태 그대로 출력하는 코드임
        # a의 길이에서 현재 순회하는 i 값을 뺀 것이, a의 길이를 10으로 나눈 나머지와 같으면 이하 코드를 출력하도록 되어 있음
        # 이 경우 아직 해당 시점까지 계산한 길이 10의 값이 값이 출력되지 않았을 것이므로, 한 번 프린트 해준 다음에 다음 줄에 남은 값(10이하)을 출력함
        elif (len(a) - i) == (len(a) % 10):
            print(a[i - 10: i])
            print(a[i:])
        # 만약 i가 10의 배수일 때, 원본 문서의 너비가 10이므로 그때까지의 값 슬라이싱 후 프린트
        elif i % 10 == 0:
            print(a[i - 10: i])
        # 위의 모든 조건에 해당하지 않으면 pass
        else:
            pass